#!/bin/sh

# Copyright (C) 1994-2016 Lawrence Livermore National Security, LLC.
# LLNL-CODE-425250.
# All rights reserved.
# 
# This file is part of Silo. For details, see silo.llnl.gov.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the disclaimer below.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the disclaimer (as noted
#      below) in the documentation and/or other materials provided with
#      the distribution.
#    * Neither the name of the LLNS/LLNL nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
# 
# THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
# "AS  IS" AND  ANY EXPRESS  OR IMPLIED  WARRANTIES, INCLUDING,  BUT NOT
# LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A  PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN  NO  EVENT SHALL  LAWRENCE
# LIVERMORE  NATIONAL SECURITY, LLC,  THE U.S.  DEPARTMENT OF  ENERGY OR
# CONTRIBUTORS BE LIABLE FOR  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR  CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT  LIMITED TO,
# PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS  OF USE,  DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER  IN CONTRACT, STRICT LIABILITY,  OR TORT (INCLUDING
# NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT  OF THE USE  OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This work was produced at Lawrence Livermore National Laboratory under
# Contract  No.   DE-AC52-07NA27344 with  the  DOE.  Neither the  United
# States Government  nor Lawrence  Livermore National Security,  LLC nor
# any of  their employees,  makes any warranty,  express or  implied, or
# assumes   any   liability   or   responsibility  for   the   accuracy,
# completeness, or usefulness of any information, apparatus, product, or
# process  disclosed, or  represents  that its  use  would not  infringe
# privately-owned   rights.  Any  reference   herein  to   any  specific
# commercial products,  process, or  services by trade  name, trademark,
# manufacturer or otherwise does not necessarily constitute or imply its
# endorsement,  recommendation,   or  favoring  by   the  United  States
# Government or Lawrence Livermore National Security, LLC. The views and
# opinions  of authors  expressed  herein do  not  necessarily state  or
# reflect those  of the United  States Government or  Lawrence Livermore
# National  Security, LLC,  and shall  not  be used  for advertising  or
# product endorsement purposes.

# -----------------------------------------------------------------------------
# Test hzip compression capability in silo by generating compressed data
# file, copying it, re-generating w/o compression and then diffing it with
# browser against the original.
#
# Programmer: Mark C. Miller
# Creation:   July 21, 2008
#
# Modifications:
#   Mark C. Miller, Wed Feb  4 20:58:34 PST 2009
#   Made it more lenient about the compressed file size being larger. That
#   can happen for toy datasets.
# -----------------------------------------------------------------------------
#
# Find dir where this script lives and source the shell utils script there.
#
# dirname -- "$0" gets the scriptâ€™s directory even if this script is run via a
#     relative path like ../../foo/bar/gorfo.sh.
# The CDPATH= nulls that env. variable and prevents cd from printing anything
#     if CDPATH is set in the environment.
# pwd gives the absolute path after the cd has occurred. This all happens in
#     a subshell so the cwd of the current script is unchanged.
#
script_dir=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)
. $script_dir/silo_sh_utils.sh

#
# Ensure the multi_test executable is available
#
multi_test=$(find_file -x tests/bin/multi_test tests/multi_test ./multi_test ../../multi_test)

#
# Ensure we have Silo's 'browser' tool available
#
browser=$(find_file -x bin/browser tools/browser/browser tools/browser/.libs/browser ../tools/browser/browser ../../../tools/browser/browser)

#
# Ensure we have HDF5's 'h5stat' tool in PATH
#
if ! command -v h5stat >/dev/null 2>&1; then
    echo "HDF5's 'h5stat' tool is required and not found."
    exit 1
fi
h5stat=$(command -v h5stat)

#
# Create data with compression (only on HDF5 driver) and save files
#
$multi_test DB_HDF5 hzip 1>/dev/null 2>&1
rm -rf h5_hzip_files
mkdir h5_hzip_files
mv multi_*d.h5 h5_hzip_files/.

#
# Create data without compression 
#
$multi_test DB_HDF5 1>/dev/null 2>&1

#
# Now, run browser and make sure we don't get any errors in the diff
#
result=0
for df in multi_*.h5; do
    # confirm compressed files are smaller (or at least not too much bigger)
    hzip_raw_data_size=$($h5stat -d h5_hzip_files/$df | grep 'Total raw data size' | tr -d '\t ' | cut -d':' -f2)
    orig_raw_data_size=$($h5stat -d $df | grep 'Total raw data size' | tr -d '\t ' | cut -d':' -f2)
    if [ -z "$orig_raw_data_size" ] || [ -z "$hzip_raw_data_size" ] ||
       [ $orig_raw_data_size -lt $hzip_raw_data_size ]; then
        result=1
        break
    fi
    # do a diff on the files and confirm contents match
    rm -f testhzip.out
    $browser -q -e diff $df h5_hzip_files/$df 1>testhzip.out 2>&1
    if [ -s testhzip.out ]; then
        result=1
        break
    fi
done

#
# Cleanup
#
rm -rf h5_hzip_files
rm -f testhzip.out

exit $result 
