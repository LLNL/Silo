#-----------------------------------------------------------------------------
# SILO Config file 
#-----------------------------------------------------------------------------
@PACKAGE_INIT@

string(TOUPPER @SILO_NAME@ SILO_PACKAGE_NAME)


#-----------------------------------------------------------------------------
# User Options
#-----------------------------------------------------------------------------
# Should compiler information used for the build be provided?

set(SILO_ENABLE_SHARED    @SILO_ENABLE_SHARED@)

set(SILO_ENABLE_SILEX @SILO_ENABLE_SILEX@)
set(SILO_ENABLE_BROWSER @SILO_ENABLE_BROWSER@)
set(SILO_ENABLE_FORTRAN @SILO_ENABLE_FORTRAN@)
set(SILO_ENABLE_HDF5 @SILO_ENABLE_HDF5@)
set(SILO_ENABLE_JSON @SILO_ENABLE_JSON@)
set(SILO_ENABLE_PYTHON_MODULE @SILO_ENABLE_PYTHON_MODULE@)
set(SILO_ENABLE_TESTS @SILO_ENABLE_TESTS@)
set(SILO_BUILD_FOR_BSD_LICENSE @SILO_BUILD_FOR_BSD_LICENSE@)
set(SILO_ENABLE_ZFP @SILO_ENABLE_ZFP@)

if(NOT SILO_BUILD_FOR_BSD_LICENSE)
  set(SILO_ENABLE_FPZIP @SILO_ENABLE_FPZIP@)
  set(SILO_ENABLE_HZIP @SILO_ENABLE_HZIP@)
endif()

#-----------------------------------------------------------------------------
# Directories
#-----------------------------------------------------------------------------
set(${SILO_PACKAGE_NAME}_INCLUDE_DIR @PACKAGE_INCLUDE_INSTALL_DIR@)

#-----------------------------------------------------------------------------
# Version Strings
#-----------------------------------------------------------------------------
set(${SILO_PACKAGE_NAME}_VERSION_STRING @SILO_VERSION@)
set(${SILO_PACKAGE_NAME}_VERSION_MAJOR  @Silo_VERSION_MAJOR@)
set(${SILO_PACKAGE_NAME}_VERSION_MINOR  @Silo_VERSION_MINOR@)

#-----------------------------------------------------------------------------
# Don't include targets if this file is being picked up by another
# project which has already built SILO as a subproject
#-----------------------------------------------------------------------------
if(NOT TARGET @SILO_NAME@)
  include (${PACKAGE_PREFIX_DIR}/cmake/@silo_targets_name@.cmake)

  if(SILO_ENABLE_HDF5)
      include(CMakeFindDependencyMacro)
      find_dependency(hdf5 @HDF5_VERSION@ PATHS ${HDF5_DIR})
  endif()
endif()


